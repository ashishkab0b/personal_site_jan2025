worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log;



    # === HTTP (port 80): allow ACME on BOTH hosts, redirect everything else to HTTPS on SAME host ===
    server {
        listen 80;
        server_name mehta.fyi www.mehta.fyi ashish.mehta.fyi www.ashish.mehta.fyi;

        # ACME challenges (must NOT redirect or change host)
        location ^~ /.well-known/acme-challenge/ {
            alias /var/www/certbot/.well-known/acme-challenge/;
            default_type text/plain;
            try_files $uri =404;
        }

        # All other HTTP requests -> HTTPS on the SAME host
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # === HTTPS: main site for ashish.mehta.fyi ===
    server {
        listen 443 ssl;
       	http2 on;
        server_name ashish.mehta.fyi www.ashish.mehta.fyi;

        ssl_certificate     /etc/letsencrypt/live/mehta.fyi/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mehta.fyi/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Optional HSTS (enable after first successful issuance)
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; script-src 'self' https://www.google.com https://www.gstatic.com https://js.stripe.com https://m.stripe.network; frame-src 'self' https://www.google.com https://www.gstatic.com https://js.stripe.com https://m.stripe.network; connect-src 'self' https://$host;" always;

        # Serve React app
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri /index.html;
        }

        # Proxy API requests to Flask backend
        location /api/ {
            proxy_pass http://flask-backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Also allow ACME over HTTPS (harmless and can help with some setups)
        location ^~ /.well-known/acme-challenge/ {
            alias /var/www/certbot/.well-known/acme-challenge/;
            default_type text/plain;
            try_files $uri =404;
        }

        # Logs ( defined at top level now)
        # error_log  /var/log/nginx/error.log;
        # access_log /var/log/nginx/access.log;
    }

    # === HTTPS: redirect mehta.fyi -> ashish.mehta.fyi ===
    server {
        listen 443 ssl;
	http2 on;
        server_name mehta.fyi www.mehta.fyi;

        ssl_certificate     /etc/letsencrypt/live/mehta.fyi/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mehta.fyi/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        return 301 https://ashish.mehta.fyi$request_uri;
    }
}
